{"version":3,"sources":["file:///Users/fouryu/Documents/GitHub/yuzhilin-public/20-mateverse/assets/scripts/FullScreenCtrl.ts"],"names":["_decorator","Component","Node","screen","macro","view","game","profiler","ccclass","property","FullScreenCtrl","start","frameRate","onToggleStats","isShowingStats","hideStats","showStats","onEnterFullScreen","setOrientation","ORIENTATION_LANDSCAPE","requestFullScreen","onExitFullScreen","exitFullScreen","update","isFullScreen","fullScreen","btnEnterFullScreen","active","btnExitFullScreen"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAgBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;;;;;;;;;OACrE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;gCAGjBU,c,WADZF,OAAO,CAAC,gBAAD,C,UAGHC,QAAQ,CAACP,IAAD,C,UAGRO,QAAQ,CAACP,IAAD,C,2BANb,MACaQ,cADb,SACoCT,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAQ1CU,QAAAA,KAAK,GAAE;AACHL,UAAAA,IAAI,CAACM,SAAL,GAAiB,EAAjB;AACH;;AAEDC,QAAAA,aAAa,GAAE;AACX,cAAGN,QAAQ,CAACO,cAAT,EAAH,EAA6B;AACzBP,YAAAA,QAAQ,CAACQ,SAAT;AACH,WAFD,MAGI;AACAR,YAAAA,QAAQ,CAACS,SAAT;AACH;AACJ;;AAEDC,QAAAA,iBAAiB,GAAG;AAChBZ,UAAAA,IAAI,CAACa,cAAL,CAAoBd,KAAK,CAACe,qBAA1B;AACAhB,UAAAA,MAAM,CAACiB,iBAAP;AACH;;AAEDC,QAAAA,gBAAgB,GAAG;AACflB,UAAAA,MAAM,CAACmB,cAAP;AACH;;AAEDC,QAAAA,MAAM,GAAG;AACL,cAAIC,YAAY,GAAGrB,MAAM,CAACsB,UAAP,EAAnB;AACA,eAAKC,kBAAL,CAAwBC,MAAxB,GAAiC,CAACH,YAAlC;AACA,eAAKI,iBAAL,CAAuBD,MAAvB,GAAgCH,YAAhC;AACH;;AAlCyC,O","sourcesContent":["import { _decorator, Component, Node, screen, macro, view, director, game, profiler } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FullScreenCtrl')\nexport class FullScreenCtrl extends Component {\n\n    @property(Node)\n    btnEnterFullScreen: Node;\n\n    @property(Node)\n    btnExitFullScreen: Node;\n\n    start(){\n        game.frameRate = 59;\n    }\n\n    onToggleStats(){\n        if(profiler.isShowingStats()){\n            profiler.hideStats();\n        }\n        else{\n            profiler.showStats();\n        }\n    }\n\n    onEnterFullScreen() {\n        view.setOrientation(macro.ORIENTATION_LANDSCAPE);\n        screen.requestFullScreen();\n    }\n\n    onExitFullScreen() {\n        screen.exitFullScreen();\n    }\n\n    update() {\n        let isFullScreen = screen.fullScreen();\n        this.btnEnterFullScreen.active = !isFullScreen;\n        this.btnExitFullScreen.active = isFullScreen;\n    }\n}\n\n"]}