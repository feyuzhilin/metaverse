{"version":3,"sources":["file:///Users/fouryu/Documents/GitHub/yuzhilin-public/20-mateverse/assets/easy_controller/UI_Joystick.ts"],"names":["_decorator","Component","UITransform","Input","KeyCode","input","director","EasyControllerEvent","ccclass","property","UI_Joystick","_ctrlRoot","_ctrlPointer","_checkerCamera","_buttons","_cameraSensitivity","_distanceOfTwoTouchPoint","_movementTouch","_cameraTouchA","_cameraTouchB","_scene","_key2buttonMap","_keys","_degree","_key2dirMap","inst","_inst","onLoad","start","checkerCamera","node","getChildByName","getComponent","on","EventType","TOUCH_START","onTouchStart_CameraCtrl","TOUCH_MOVE","onTouchMove_CameraCtrl","TOUCH_END","onTouchUp_CameraCtrl","TOUCH_CANCEL","checkerMovement","onTouchStart_Movement","onTouchMove_Movement","onTouchUp_Movement","active","KEY_J","KEY_K","KEY_L","KEY_U","KEY_I","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","MOUSE_WHEEL","onMouseWheel","getScene","onDestroy","off","bindKeyToButton","keyCode","btnName","setButtonVisible","visible","getButtonByName","event","touches","getTouches","i","length","touch","x","getUILocationX","y","getUILocationY","halfWidth","width","halfHeight","height","setPosition","getID","pos","position","ox","oy","len","Math","sqrt","dirX","dirY","radius","degree","atan","PI","emit","MOVEMENT","MOVEMENT_STOP","getDistOfTwoTouchPoints","touchA","touchB","dx","getLocationX","dy","getLocationY","getAllTouches","touchID","console","log","needZoom","newDist","delta","CAMERA_ZOOM","dt","getDelta","rx","ry","CAMERA_ROTATE","hasTouchA","hasTouchB","KEY_A","KEY_S","KEY_D","KEY_W","indexOf","push","updateDirection","BUTTON","index","splice","getScrollY","onButtonSlot","target","name","keyCode0","keyCode1"],"mappings":"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","sourcesContent":["import { _decorator, Node, EventTouch, Touch, Component, UITransform, Input, EventKeyboard, KeyCode, v2, Vec3, input, Scene, director, EventMouse, macro, view, screen } from 'cc';\r\nimport { EasyControllerEvent } from './EasyController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/****\r\n * split screen into three parts.\r\n * ---------------------------------------------\r\n *                                              |\r\n *           1.camera rotation zone             |\r\n *                                              |\r\n *----------------------------------------------|\r\n *                      |                       |\r\n * 2.movement ctrl zone  | 3.camera rotation zone|\r\n *                      |                       |\r\n * ----------------------------------------------\r\n * \r\n * multi-touch for camera zoom.\r\n *  */\r\n\r\n@ccclass('UI_Joystick')\r\nexport class UI_Joystick extends Component {\r\n\r\n    private static _inst:UI_Joystick = null;\r\n    public static get inst():UI_Joystick{\r\n        return this._inst;\r\n    }\r\n\r\n\r\n    private _ctrlRoot: UITransform = null;\r\n    private _ctrlPointer: Node = null;\r\n    private _checkerCamera: UITransform = null;\r\n    private _buttons: Node = null;\r\n\r\n    private _cameraSensitivity: number = 0.1;\r\n    private _distanceOfTwoTouchPoint: number = 0;\r\n\r\n    private _movementTouch: Touch = null;\r\n    private _cameraTouchA: Touch = null;\r\n    private _cameraTouchB: Touch = null;\r\n\r\n    private _scene: Scene = null;\r\n\r\n    private _key2buttonMap = {};\r\n\r\n    protected onLoad(): void {\r\n        UI_Joystick._inst = this;\r\n    }\r\n\r\n    start() {\r\n        let checkerCamera = this.node.getChildByName('checker_camera').getComponent(UITransform);\r\n        checkerCamera.node.on(Input.EventType.TOUCH_START, this.onTouchStart_CameraCtrl, this);\r\n        checkerCamera.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove_CameraCtrl, this);\r\n        checkerCamera.node.on(Input.EventType.TOUCH_END, this.onTouchUp_CameraCtrl, this);\r\n        checkerCamera.node.on(Input.EventType.TOUCH_CANCEL, this.onTouchUp_CameraCtrl, this);\r\n\r\n        let checkerMovement = this.node.getChildByName('checker_movement').getComponent(UITransform);\r\n        checkerMovement.node.on(Input.EventType.TOUCH_START, this.onTouchStart_Movement, this);\r\n        checkerMovement.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove_Movement, this);\r\n        checkerMovement.node.on(Input.EventType.TOUCH_END, this.onTouchUp_Movement, this);\r\n        checkerMovement.node.on(Input.EventType.TOUCH_CANCEL, this.onTouchUp_Movement, this);\r\n\r\n\r\n        this._checkerCamera = checkerCamera;\r\n\r\n        this._ctrlRoot = this.node.getChildByName('ctrl').getComponent(UITransform);\r\n        this._ctrlRoot.node.active = false;\r\n        this._ctrlPointer = this._ctrlRoot.node.getChildByName('pointer');\r\n\r\n        this._buttons = this.node.getChildByName('buttons');\r\n\r\n        this._key2buttonMap[KeyCode.KEY_J] = 'btn_slot_0';\r\n        this._key2buttonMap[KeyCode.KEY_K] = 'btn_slot_1';\r\n        this._key2buttonMap[KeyCode.KEY_L] = 'btn_slot_2';\r\n        this._key2buttonMap[KeyCode.KEY_U] = 'btn_slot_3';\r\n        this._key2buttonMap[KeyCode.KEY_I] = 'btn_slot_4';\r\n\r\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        input.on(Input.EventType.MOUSE_WHEEL,this.onMouseWheel, this);\r\n\r\n        this._scene = director.getScene();\r\n    }\r\n\r\n    onDestroy() {\r\n        input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        input.off(Input.EventType.MOUSE_WHEEL,this.onMouseWheel, this);\r\n\r\n        UI_Joystick._inst = null;\r\n    }\r\n\r\n    bindKeyToButton(keyCode:KeyCode, btnName:string){\r\n        this._key2buttonMap[keyCode] = btnName;\r\n    }\r\n\r\n    setButtonVisible(btnName:string, visible:boolean){\r\n        let node = this._buttons?.getChildByName(btnName);\r\n        if(node){\r\n            node.active = visible;\r\n        }\r\n    }\r\n\r\n    getButtonByName(btnName:string):Node{\r\n        return this._buttons.getChildByName(btnName);\r\n    }\r\n\r\n    onTouchStart_Movement(event: EventTouch) {\r\n        let touches = event.getTouches();\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let touch = touches[i];\r\n            let x = touch.getUILocationX();\r\n            let y = touch.getUILocationY();\r\n            if (!this._movementTouch) {\r\n                //we sub halfWidth,halfHeight here.\r\n                //because, the touch event use left bottom as zero point(0,0), ui node use the center of screen as zero point(0,0)\r\n                //this._ctrlRoot.setPosition(x - halfWidth, y - halfHeight, 0);\r\n\r\n                let halfWidth = this._checkerCamera.width / 2;\r\n                let halfHeight = this._checkerCamera.height / 2;\r\n\r\n                this._ctrlRoot.node.active = true;\r\n                this._ctrlRoot.node.setPosition(x - halfWidth, y - halfHeight, 0);\r\n                this._ctrlPointer.setPosition(0, 0, 0);\r\n                this._movementTouch = touch;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove_Movement(event: EventTouch) {\r\n        let touches = event.getTouches();\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let touch = touches[i];\r\n            if (this._movementTouch && touch.getID() == this._movementTouch.getID()) {\r\n                let halfWidth = this._checkerCamera.width / 2;\r\n                let halfHeight = this._checkerCamera.height / 2;\r\n                let x = touch.getUILocationX();\r\n                let y = touch.getUILocationY();\r\n\r\n                let pos = this._ctrlRoot.node.position;\r\n                let ox = x - halfWidth - pos.x;\r\n                let oy = y - halfHeight - pos.y;\r\n\r\n                let len = Math.sqrt(ox * ox + oy * oy);\r\n                if (len <= 0) {\r\n                    return;\r\n                }\r\n\r\n                let dirX = ox / len;\r\n                let dirY = oy / len;\r\n                let radius = this._ctrlRoot.width / 2;\r\n                if (len > radius) {\r\n                    len = radius;\r\n                    ox = dirX * radius;\r\n                    oy = dirY * radius;\r\n                }\r\n\r\n                this._ctrlPointer.setPosition(ox, oy, 0);\r\n\r\n                // degree 0 ~ 360 based on x axis.\r\n                let degree = Math.atan(dirY / dirX) / Math.PI * 180;\r\n                if (dirX < 0) {\r\n                    degree += 180;\r\n                }\r\n                else {\r\n                    degree += 360;\r\n                }\r\n\r\n                this._scene.emit(EasyControllerEvent.MOVEMENT, degree, len / radius);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchUp_Movement(event: EventTouch) {\r\n        let touches = event.getTouches();\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let touch = touches[i];\r\n            if (this._movementTouch && touch.getID() == this._movementTouch.getID()) {\r\n                this._scene.emit(EasyControllerEvent.MOVEMENT_STOP);\r\n                this._movementTouch = null;\r\n                this._ctrlRoot.node.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private getDistOfTwoTouchPoints(): number {\r\n        let touchA = this._cameraTouchA;\r\n        let touchB = this._cameraTouchB;\r\n        if (!touchA || !touchB) {\r\n            return 0;\r\n        }\r\n        let dx = touchA.getLocationX() - touchB.getLocationX();\r\n        let dy = touchB.getLocationY() - touchB.getLocationY();\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    \r\n    private onTouchStart_CameraCtrl(event: EventTouch) {\r\n        let touches = event.getAllTouches();\r\n        this._cameraTouchA = null;\r\n        this._cameraTouchB = null;\r\n        for (let i = touches.length - 1; i >= 0; i--) {\r\n            let touch = touches[i];\r\n            if (this._movementTouch && touch.getID() == this._movementTouch.getID()) {\r\n                continue;\r\n            }\r\n            if (this._cameraTouchA == null) {\r\n                this._cameraTouchA = touches[i];\r\n            }\r\n            else if (this._cameraTouchB == null) {\r\n                this._cameraTouchB = touches[i];\r\n                break;\r\n            }\r\n        }\r\n        this._distanceOfTwoTouchPoint = this.getDistOfTwoTouchPoints();\r\n    }\r\n\r\n    private onTouchMove_CameraCtrl(event: EventTouch) {\r\n        let touches = event.getTouches();\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let touch = touches[i];\r\n            let touchID = touch.getID();\r\n            //two touches, do camera zoom.\r\n            if (this._cameraTouchA && this._cameraTouchB) {\r\n                console.log(touchID, this._cameraTouchA.getID(), this._cameraTouchB.getID());\r\n                let needZoom = false;\r\n                if (touchID == this._cameraTouchA.getID()) {\r\n                    this._cameraTouchA = touch;\r\n                    needZoom = true;\r\n                }\r\n                if (touchID == this._cameraTouchB.getID()) {\r\n                    this._cameraTouchB = touch;\r\n                    needZoom = true;\r\n                }\r\n\r\n                if (needZoom) {\r\n                    let newDist = this.getDistOfTwoTouchPoints();\r\n                    let delta = this._distanceOfTwoTouchPoint - newDist;\r\n                    this._scene.emit(EasyControllerEvent.CAMERA_ZOOM, delta);\r\n                    this._distanceOfTwoTouchPoint = newDist;\r\n                }\r\n            }\r\n            //only one touch, do camera rotate.\r\n            else if (this._cameraTouchA && touchID == this._cameraTouchA.getID()) {\r\n                let dt = touch.getDelta();\r\n                let rx = dt.y * this._cameraSensitivity;\r\n                let ry = -dt.x * this._cameraSensitivity;\r\n                this._scene.emit(EasyControllerEvent.CAMERA_ROTATE, rx, ry);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onTouchUp_CameraCtrl(event: EventTouch) {\r\n        let touches = event.getAllTouches();\r\n        let hasTouchA = false;\r\n        let hasTouchB = false;\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let touch = touches[i];\r\n            let touchID = touch.getID();\r\n            if (this._cameraTouchA && touchID == this._cameraTouchA.getID()) {\r\n                hasTouchA = true;\r\n            }\r\n            else if (this._cameraTouchB && touchID == this._cameraTouchB.getID()) {\r\n                hasTouchB = true;\r\n            }\r\n        }\r\n\r\n        if (!hasTouchA) {\r\n            this._cameraTouchA = null;\r\n        }\r\n        if (!hasTouchB) {\r\n            this._cameraTouchB = null;\r\n        }\r\n    }\r\n\r\n    private _keys = [];\r\n    private _degree: number = 0;\r\n\r\n    onKeyDown(event: EventKeyboard) {\r\n        let keyCode = event.keyCode;\r\n        if (keyCode == KeyCode.KEY_A || keyCode == KeyCode.KEY_S || keyCode == KeyCode.KEY_D || keyCode == KeyCode.KEY_W) {\r\n            if (this._keys.indexOf(keyCode) == -1) {\r\n                this._keys.push(keyCode);\r\n                this.updateDirection();\r\n            }\r\n        }\r\n        else{\r\n            let btnName = this._key2buttonMap[keyCode];\r\n            if(btnName){\r\n                this._scene.emit(EasyControllerEvent.BUTTON,btnName);\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyUp(event: EventKeyboard) {\r\n        let keyCode = event.keyCode;\r\n        if (keyCode == KeyCode.KEY_A || keyCode == KeyCode.KEY_S || keyCode == KeyCode.KEY_D || keyCode == KeyCode.KEY_W) {\r\n            let index = this._keys.indexOf(keyCode);\r\n            if (index != -1) {\r\n                this._keys.splice(index, 1);\r\n                this.updateDirection();\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseWheel(event:EventMouse){\r\n        let delta = event.getScrollY() * 0.1;\r\n        console.log(delta);\r\n        this._scene.emit(EasyControllerEvent.CAMERA_ZOOM, delta);\r\n    }\r\n\r\n    onButtonSlot(event){\r\n        let btnName = event.target.name;\r\n        this._scene.emit(EasyControllerEvent.BUTTON,btnName);\r\n    }\r\n\r\n    private _key2dirMap = null;\r\n\r\n    updateDirection() {\r\n        if (this._key2dirMap == null) {\r\n            this._key2dirMap = {};\r\n            this._key2dirMap[0] = -1;\r\n            this._key2dirMap[KeyCode.KEY_A] = 180;\r\n            this._key2dirMap[KeyCode.KEY_D] = 0;\r\n            this._key2dirMap[KeyCode.KEY_W] = 90;\r\n            this._key2dirMap[KeyCode.KEY_S] = 270;\r\n\r\n            this._key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_W] = this._key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_A] = 135;\r\n            this._key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_W] = this._key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_D] = 45;\r\n            this._key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_S] = this._key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_A] = 225;\r\n            this._key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_S] = this._key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_D] = 315;\r\n\r\n            this._key2dirMap[KeyCode.KEY_A * 1000 + KeyCode.KEY_D] = this._key2dirMap[KeyCode.KEY_D];\r\n            this._key2dirMap[KeyCode.KEY_D * 1000 + KeyCode.KEY_A] = this._key2dirMap[KeyCode.KEY_A];\r\n            this._key2dirMap[KeyCode.KEY_W * 1000 + KeyCode.KEY_S] = this._key2dirMap[KeyCode.KEY_S];\r\n            this._key2dirMap[KeyCode.KEY_S * 1000 + KeyCode.KEY_W] = this._key2dirMap[KeyCode.KEY_W];\r\n        }\r\n        let keyCode0 = this._keys[this._keys.length - 1] || 0;\r\n        let keyCode1 = this._keys[this._keys.length - 2] || 0;\r\n        this._degree = this._key2dirMap[keyCode1 * 1000 + keyCode0];\r\n        if (this._degree == null || this._degree < 0) {\r\n            this._scene.emit(EasyControllerEvent.MOVEMENT_STOP);\r\n        }\r\n        else {\r\n            this._scene.emit(EasyControllerEvent.MOVEMENT, this._degree, 1.0);\r\n        }\r\n    }\r\n}"]}