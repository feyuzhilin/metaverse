{"version":3,"sources":["file:///Users/fouryu/Documents/GitHub/yuzhilin-public/20-metaverse/assets/easy_controller/ThirdPersonCamera.ts"],"names":["_decorator","Component","Node","Vec3","v3","EasyController","EasyControllerEvent","ccclass","property","v3_1","v3_2","ROTATION_STRENGTH","ThirdPersonCamera","_targetLen","_targetAngles","start","on","CAMERA_ROTATE","onCameraRotate","CAMERA_ZOOM","onCameraZoom","len","set","node","eulerAngles","onDestroy","off","lateUpdate","deltaTime","target","t","Math","min","tweenTime","lerp","setRotationFromEuler","worldPosition","add","lookAtOffset","forward","multiplyScalar","subtract","setPosition","deltaX","deltaY","rotateVHSeparately","abs","x","y","z","delta","zoomSensitivity","lenMin","lenMax"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, v3 } from 'cc';\nimport { EasyController, EasyControllerEvent } from './EasyController';\nconst { ccclass, property } = _decorator;\n\nconst v3_1 = v3();\nconst v3_2 = v3();\n\nconst ROTATION_STRENGTH = 20.0;\n\n@ccclass('ThirdPersonCamera')\nexport class ThirdPersonCamera extends Component {\n    @property(Node)\n    target: Node;\n\n    @property\n    lookAtOffset: Vec3 = v3();\n\n    @property\n    zoomSensitivity: number = 1.0;\n\n    @property\n    lenMin: number = 1.0;\n\n    @property\n    lenMax: number = 10.0;\n\n    @property\n    len: number = 5;\n\n    @property\n    rotateVHSeparately: boolean = false;\n\n    @property\n    tweenTime:number = 0.2;\n\n    private _targetLen: number = 0;\n    private _targetAngles: Vec3 = v3();\n\n\n    start() {\n        EasyController.on(EasyControllerEvent.CAMERA_ROTATE, this.onCameraRotate, this);\n        EasyController.on(EasyControllerEvent.CAMERA_ZOOM, this.onCameraZoom, this);\n\n        this._targetLen = this.len;\n        this._targetAngles.set(this.node.eulerAngles);\n    }\n\n    onDestroy() {\n        EasyController.off(EasyControllerEvent.CAMERA_ROTATE, this.onCameraRotate, this);\n        EasyController.off(EasyControllerEvent.CAMERA_ZOOM, this.onCameraZoom, this);\n    }\n\n    lateUpdate(deltaTime: number) {\n        if (!this.target) {\n            return;\n        }\n        const t = Math.min(deltaTime / this.tweenTime, 1.0);\n        //rotation\n        v3_1.set(this.node.eulerAngles);\n        Vec3.lerp(v3_1, v3_1, this._targetAngles, t);\n        this.node.setRotationFromEuler(v3_1);\n\n        //lookat\n        v3_1.set(this.target.worldPosition);\n        v3_1.add(this.lookAtOffset);\n\n        //len and position\n        this.len = this.len * (1.0 - t) + this._targetLen * t;\n        v3_2.set(this.node.forward);\n        v3_2.multiplyScalar(this.len);\n\n        v3_1.subtract(v3_2);\n        this.node.setPosition(v3_1);\n    }\n\n    onCameraRotate(deltaX: number, deltaY: number) {\n        let eulerAngles = this.node.eulerAngles;\n        if (this.rotateVHSeparately) {\n            if (Math.abs(deltaX) > Math.abs(deltaY)) {\n                deltaY = 0;\n            }\n            else {\n                deltaX = 0;\n            }\n        }\n        this._targetAngles.set(eulerAngles.x + deltaX * ROTATION_STRENGTH, eulerAngles.y + deltaY * ROTATION_STRENGTH, eulerAngles.z);\n    }\n\n    onCameraZoom(delta: number) {\n        this._targetLen += delta * this.zoomSensitivity;\n        if (this._targetLen < this.lenMin) {\n            this._targetLen = this.lenMin;\n        }\n        if (this._targetLen > this.lenMax) {\n            this._targetLen = this.lenMax;\n        }\n    }\n}\n\n"]}