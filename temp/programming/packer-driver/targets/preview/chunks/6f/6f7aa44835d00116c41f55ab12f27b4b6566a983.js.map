{"version":3,"sources":["file:///Users/fouryu/Documents/GitHub/yuzhilin-public/20-mateverse/assets/controller/CharacterMovement.ts"],"names":["_decorator","Component","v3","RigidBody","Vec3","find","Camera","SkeletalAnimation","AnimationClip","Collider","EasyController","EasyControllerEvent","ccclass","property","v3_1","CharacterMovement","_curJumpTimes","_rigidBody","_isMoving","_velocityScale","_isInTheAir","_currentVerticalVelocity","_anim","_tmp","start","mainCamera","getComponent","node","clipArr","idleAnimClip","moveAnimClip","jumpBeginAnimClip","jumpLoopAnimClip","jumpLandAnimClip","i","length","clip","getState","name","addClip","play","on","MOVEMENT","onMovement","MOVEMENT_STOP","onMovementRelease","BUTTON","onJump","myCollider","target","otherCollider","selfCollider","onLand","onDestroy","off","update","deltaTime","set","forward","multiplyScalar","velocity","getLinearVelocity","y","setLinearVelocity","add","position","setPosition","state","isPlaying","current","duration","crossFade","oldPos","nextY","x","z","degree","offset","cameraRotationY","eulerAngles","setRotationFromEuler","speed","ZERO","btnName","console","log","maxJumpTimes","jumpVelocity"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, v3, RigidBody, Vec3, find, Camera, SkeletalAnimation, AnimationClip, Collider, ICollisionEvent } from 'cc';\nimport { EasyController, EasyControllerEvent } from './EasyController';\nconst { ccclass, property } = _decorator;\n\nconst v3_1 = v3();\n\n@ccclass('CharacterMovement')\nexport class CharacterMovement extends Component {\n\n    @property(Camera)\n    mainCamera: Camera;\n\n    @property\n    velocity = 1.0;\n\n    @property\n    jumpVelocity = 1.0;\n\n    @property\n    maxJumpTimes: number = 0;\n    private _curJumpTimes: number = 0;\n\n    @property(AnimationClip)\n    idleAnimClip: AnimationClip;\n\n    @property(AnimationClip)\n    moveAnimClip: AnimationClip;\n\n    @property(AnimationClip)\n    jumpBeginAnimClip: AnimationClip;\n\n    @property(AnimationClip)\n    jumpLoopAnimClip: AnimationClip;\n\n    @property(AnimationClip)\n    jumpLandAnimClip: AnimationClip;\n\n    _rigidBody: RigidBody;\n    _isMoving: boolean = false;\n    _velocityScale: number = 1.0;\n\n    _isInTheAir: boolean = false;\n    _currentVerticalVelocity: number = 0.0;\n\n    private _anim: SkeletalAnimation;\n\n    start() {\n        if (!this.mainCamera) {\n            this.mainCamera = find('Main Camera')?.getComponent(Camera);\n        }\n        this._rigidBody = this.node.getComponent(RigidBody);\n        this._anim = this.node.getComponent(SkeletalAnimation);\n        if (this._anim) {\n            let clipArr = [\n                this.idleAnimClip,\n                this.moveAnimClip,\n                this.jumpBeginAnimClip,\n                this.jumpLoopAnimClip,\n                this.jumpLandAnimClip\n            ];\n            for (let i = 0; i < clipArr.length; ++i) {\n                let clip = clipArr[i];\n                if (clip) {\n                    if (!this._anim.getState(clip.name)) {\n                        this._anim.addClip(clip);\n                    }\n                }\n            }\n            if (this.idleAnimClip) {\n                this._anim.play(this.idleAnimClip.name);\n            }\n        }\n\n        EasyController.on(EasyControllerEvent.MOVEMENT, this.onMovement, this);\n        EasyController.on(EasyControllerEvent.MOVEMENT_STOP, this.onMovementRelease, this);\n        EasyController.on(EasyControllerEvent.BUTTON, this.onJump, this);\n\n        let myCollider = this.getComponent(Collider);\n        myCollider?.on('onCollisionEnter',(target:ICollisionEvent)=>{\n            if(target.otherCollider != target.selfCollider){\n                this.onLand();\n            }\n        });\n    }\n\n    onDestroy() {\n        EasyController.off(EasyControllerEvent.MOVEMENT, this.onMovement, this);\n        EasyController.off(EasyControllerEvent.MOVEMENT_STOP, this.onMovementRelease, this);\n        EasyController.off(EasyControllerEvent.MOVEMENT_STOP, this.onJump, this);\n    }\n\n    update(deltaTime: number) {\n        if (this._isMoving) {\n            this._tmp.set(this.node.forward);\n            this._tmp.multiplyScalar(-1.0);\n            this._tmp.multiplyScalar(this.velocity * this._velocityScale);\n            if (this._rigidBody) {\n                this._rigidBody.getLinearVelocity(v3_1);\n                this._tmp.y = v3_1.y;\n                this._rigidBody.setLinearVelocity(this._tmp);\n            }\n            else {\n                this._tmp.multiplyScalar(deltaTime);\n                this._tmp.add(this.node.position);\n                this.node.setPosition(this._tmp);\n            }\n        }\n\n        if (this._isInTheAir) {\n            if(this.jumpBeginAnimClip && this._anim){\n                let state = this._anim.getState(this.jumpBeginAnimClip.name);\n                if(state.isPlaying && state.current >= state.duration){\n                    if(this.jumpLoopAnimClip){\n                        this._anim.crossFade(this.jumpLoopAnimClip.name);\n                    }\n                }\n            }\n\n            if(!this._rigidBody){\n                this._currentVerticalVelocity -= 9.8 * deltaTime;\n            \n                let oldPos = this.node.position;\n                let nextY = oldPos.y + this._currentVerticalVelocity * deltaTime;\n                if (nextY <= 0) {\n                    this.onLand();\n                    nextY = 0.0;\n                }\n                this.node.setPosition(oldPos.x, nextY, oldPos.z);\n            }\n        }\n    }\n\n    onLand(){\n        this._isInTheAir = false;\n        this._currentVerticalVelocity = 0.0;\n        this._curJumpTimes = 0;\n        if (this.moveAnimClip) {\n            if(this._isMoving){\n                this._anim.crossFade(this.moveAnimClip.name, 0.5);\n            }\n            else{\n                this._anim.crossFade(this.idleAnimClip.name, 0.5);\n            }\n        }\n    }\n\n    private _tmp = v3();\n    onMovement(degree: number, offset: number) {\n        let cameraRotationY = 0;\n        if (this.mainCamera) {\n            cameraRotationY = this.mainCamera.node.eulerAngles.y;\n        }\n        this._velocityScale = offset;\n        //2D界面是 正X 为 0， 3D场景是 正前方为0，所以需要 - 90 度。（顺时针转90度）\n        this._tmp.set(0, cameraRotationY + degree - 90 + 180, 0);\n        this.node.setRotationFromEuler(this._tmp);\n        if (this._anim) {\n            if (!this._isMoving && !this._isInTheAir) {\n                if (this.moveAnimClip) {\n                    this._anim.crossFade(this.moveAnimClip.name, 0.1);\n                }\n            }\n            if (this.moveAnimClip) {\n                this._anim.getState(this.moveAnimClip.name).speed = this._velocityScale;\n            }\n        }\n        this._isMoving = true;\n\n    }\n    onMovementRelease() {\n        if (!this._isInTheAir && this.idleAnimClip) {\n            this._anim?.crossFade(this.idleAnimClip.name, 0.5);\n        }\n        this._isMoving = false;\n        if (this._rigidBody) {\n            this._rigidBody.setLinearVelocity(Vec3.ZERO);\n        }\n    }\n\n    onJump(btnName:string) {\n        console.log(btnName);\n        if(btnName != 'btn_slot_0'){\n            return;\n        }\n        if (this._curJumpTimes >= this.maxJumpTimes) {\n            return;\n        }\n        if(this._curJumpTimes == 0 || true){\n            if(this.jumpBeginAnimClip){\n                this._anim?.crossFade(this.jumpBeginAnimClip.name);\n            }\n        }\n        this._curJumpTimes++;\n        if(this._rigidBody){\n            this._rigidBody.getLinearVelocity(v3_1);\n            v3_1.y = this.jumpVelocity;\n            this._rigidBody.setLinearVelocity(v3_1);\n        }\n        else{\n            this._currentVerticalVelocity = this.jumpVelocity;\n        }\n        \n        this._isInTheAir = true;\n    }\n}\n\n"]}